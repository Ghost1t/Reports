/* Ссылки
TFlex.Model.Technology.dll
TFlex.Reporting.CAD.dll
TFlex.Reporting.Technology.dll
*/

using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Windows.Forms;
using TFlex.DOCs.Model.Macros;
using TFlex.DOCs.Model.Macros.ObjectModel;
using TFlex.Model.Technology.Macros.ObjectModel;
using TFlex.Reporting.Technology.Macros;

public class Macro : MacroProvider
{
    public Macro(MacroContext context)
        : base(context)
    {
        //System.Diagnostics.Debugger.Launch();
        //System.Diagnostics.Debugger.Break();
    }

    public override void Run()
    {

    }

    public string КолонкаОперации_и_подразделения()
    {

        string US = "";
        Объекты техпроцессы = ТекущийОбъект.СвязанныеОбъекты["Техпроцессы"];
        foreach (Объект техпроцесс in техпроцессы)
        {
            Объекты операции = техпроцесс.ДочерниеОбъекты;
            foreach (Объект операция in операции)
            {
                US = US + операция.Параметр["Номер"] + "+" + операция.Параметр["Наименование"] + "+";
                Объект подразделение = операция.СвязанныйОбъект["Производственное подразделение"];
                if (подразделение != null)
                {
                    US = US + операция.СвязанныйОбъект["Производственное подразделение"].Параметр["Наименование"];
                }
                US = US + ";";
            }
        }
        return US;
    }
    public string КолонкаОборудование_и_материалы()
    {

        string US = "";
        Объекты техпроцессы = ТекущийОбъект.СвязанныеОбъекты["Техпроцессы"];
        foreach (Объект техпроцесс in техпроцессы)
        {
            ТехнологическийПроцесс техпроцесс2 = (ТехнологическийПроцесс)техпроцесс;
            Материал[] материалы = техпроцесс2.Материалы;
            int количествоМатериалов = материалы.Length;
            if (количествоМатериалов > 0)
            {
                foreach (Объект материал in материалы)
                {
                    US = US + материал.Параметр["Сводное наименование материала"] + "+";

                    string r1 = материал.Параметр["Длина заготовки на деталь"];
                    string r2 = материал.Параметр["Ширина заготовки на деталь"];
                    if ((r1 != "") && (r1 != "0"))
                    {
                        if ((r2 != "") && (r2 != "0"))
                            US = US + r1 + "x" + r2;
                        else
                            US = US + "L=" + r1;
                    }
                    else
                        if ((r2 != "") && (r2 != "0"))
                        US = US + r2;
                }
                US = US + "+";
            }
            else
            {
                US = "++";
            }

            Объекты операции = техпроцесс.ДочерниеОбъекты;
            foreach (Объект операция in операции)
            {
                Объект подразделение = операция.СвязанныйОбъект["Производственное подразделение"];
                if (подразделение != null)
                {
                    US = US + операция.СвязанныйОбъект["Производственное подразделение"].Параметр["Наименование"] + "+";
                }
                US = US + операция.Параметр["Номер"] + "+" + операция.Параметр["Наименование"];

                Операция операция2 = (Операция)операция;
                Оснащение[] оснащения = операция2.Оснащение;
                int количествоОснащения = оснащения.Length;
                if (количествоОснащения > 0)
                {
                    foreach (Объект оснащение in оснащения)
                    {
                        US = US + "+" + оснащение.Параметр["Строка оснащения"];
                    }
                }
                US = US + ";";
            }
        }
        return US;
    }
    public Объекты ПолучитьОбъектыПоСвязи(ObjectAccessor[] arr, string наименованиеСвязи)
    {
        Объекты списокОбъектов = new Объекты();
        foreach (var obj in arr)
        {
            Объект объект = obj.СвязанныйОбъект[наименованиеСвязи];
            if (объект != null)
                списокОбъектов.Add(объект);
        }
        return списокОбъектов;
    }

    public string КолонкаОборудование_без_материалов()
    {

        string US = "";
        Объекты техпроцессы = ТекущийОбъект.СвязанныеОбъекты["Техпроцессы"];
        foreach (Объект техпроцесс in техпроцессы)
        {
            ТехнологическийПроцесс техпроцесс2 = (ТехнологическийПроцесс)техпроцесс;
            Объекты документы = техпроцесс2.СвязанныеОбъекты["Документация"];
            foreach (var документ in документы)
            {
                string МОК = "Маршрутно-операционная карта";
                string наименование = документ.Параметр["Наименование"];

                if (наименование.Contains(МОК))
                {
                    US = US + "+" + документ.Параметр["Обозначение"];
                }

            }


            Объекты операции = техпроцесс.ДочерниеОбъекты;
            foreach (Объект операция in операции)
            {

                Операция операция2 = (Операция)операция;


                Оснащение[] оснащения = операция2.Оснащение;
                int количествоОснащения = оснащения.Length;
                if (количествоОснащения > 0)
                {
                    foreach (Объект оснащение in оснащения)
                    {
                        US = US + "+" + оснащение.Параметр["Строка оснащения"];
                    }
                }
                US = US + ";";
            }
        }
        return US;
    }

    public string КолонкаОборудование_c_фильтром()
    {
        string[] Filter_VO = new string[]{"ОР","ОШ","ПЧ","ОП","ОК","ОУ","ПЦ","Ш-","П-","1П","2П","3П",
        "4П","5П","6П","7П","8П","9П","КИ","СН","ПФ","ми","ри","1Р","2Р","3Р","4Р","5Р","6Р","7Р","1М","2М","3М","4М","5М","6М"};
        string US = "";
        Объекты техпроцессы = ТекущийОбъект.СвязанныеОбъекты["Техпроцессы"];
        foreach (Объект техпроцесс in техпроцессы)
        {
            ТехнологическийПроцесс техпроцесс2 = (ТехнологическийПроцесс)техпроцесс;
            Объекты документы = техпроцесс2.СвязанныеОбъекты["Документация"];
            foreach (var документ in документы)
            {
                string МОК = "Маршрутно-операционная карта";
                string наименование = документ.Параметр["Наименование"];

                if (наименование.Contains(МОК))
                {
                    US = US + "+" + документ.Параметр["Обозначение"];
                }

            }


            Объекты операции = техпроцесс.ДочерниеОбъекты;
            foreach (Объект операция in операции)
            {

                Операция операция2 = (Операция)операция;


                List<Оснащение> списокОснащения2 = new List<Оснащение>();
                списокОснащения2.AddRange(операция2.Оснащение);
                foreach (Переход переход2 in операция2.Переходы)
                {
                    списокОснащения2.AddRange(переход2.Оснащение);
                }


                int количествоОснащения = списокОснащения2.Count;
                if (количествоОснащения > 0)
                {
                    foreach (Объект оснащение2 in списокОснащения2)
                    {

                        Объект оснащениеСТО2 = оснащение2.СвязанныйОбъект["Оснащение из справочника СТО"];
                        if (оснащениеСТО2 == null)
                            continue;

                        string Наим = оснащениеСТО2.Параметр["Наименование"];
                        string осн_краткое = Наим.Substring(0, 2);           //Забираем первые две буквы оснащения (ОР; ОШ; ПЧ и ОП и т.д.)
                        if (Filter_VO.Contains(осн_краткое))
                        {
                            US = US + "+" + оснащениеСТО2.Параметр["Наименование"];
                        }
                    }
                }
            }
        }
        return US;
    }

    public string Герметичность()
    {
        string K = "Контрольная";
        string P = "Проверочная";
        string T = "Технологическая приработка";
        string Result = "";
        string G = "Герметичност";
        string L = "герметичност";

        Объекты техпроцессы = ТекущийОбъект.СвязанныеОбъекты["Техпроцессы"];
        foreach (Объект техпроцесс in техпроцессы)
        {
            ТехнологическийПроцесс техпроцесс2 = (ТехнологическийПроцесс)техпроцесс;

            Объекты операции = техпроцесс.ДочерниеОбъекты;
            foreach (Объект операция in операции)
            {
                Операция операция2 = (Операция)операция;

                string НаименОпер = операция2.Параметр["Наименование"];

                if (НаименОпер.Contains(K) || НаименОпер.Contains(P) || НаименОпер.Contains(T))
                {

                    foreach (Переход переход2 in операция2.Переходы)
                    {

                        string ТекстПерехода = переход2.Параметр["Текст перехода"];

                        if (ТекстПерехода.Contains(G) || ТекстПерехода.Contains(L))
                        {
                            Result += "+" + операция2.Параметр["Наименование"] + "+" + переход2.Параметр["Текст перехода"];
                        }

                    }

                }
            }
        }
        return Result;
    }


    public List<Guid> Фильтр_Герметичность()
    {
        string K = "Контрольная";
        string P = "Проверочная";
        string T = "Технологическая приработка";
        string G = "Герметичност";
        string L = "герметичност";

        List<Guid> Изделия = new List<Guid>();
        Объекты ПоискИзделий = НайтиОбъекты("Электронная структура изделий", "[Тип] = 'Изделие'");
        Объекты СБ = НайтиОбъекты("Электронная структура изделий", "[Тип] = 'Сборочная единица'");
        Объекты Детали = НайтиОбъекты("Электронная структура изделий", "[Тип] = 'Деталь'");

        List<Объект> Лист1 = new List<Объект>(ПоискИзделий);
        List<Объект> Лист2 = new List<Объект>(СБ);
        List<Объект> Лист3 = new List<Объект>(Детали);
        Лист1.AddRange(Лист2);
        Лист1.AddRange(Лист3);

        Объекты ВсеЭси = Лист1;

        foreach (Объект Изделие in ВсеЭси)
        {
            Объекты техпроцессы = Изделие.СвязанныеОбъекты["Техпроцессы"];



            foreach (Объект техпроцесс in техпроцессы)
            {
                ТехнологическийПроцесс техпроцесс2 = (ТехнологическийПроцесс)техпроцесс;

                Объекты операции = техпроцесс.ДочерниеОбъекты;
                foreach (Объект операция in операции)
                {
                    Операция операция2 = (Операция)операция;
                    if (операция2 != null)
                    {
                        string НаименОпер = операция2.Параметр["Наименование"];

                        if (НаименОпер.Contains(K) || НаименОпер.Contains(P) || НаименОпер.Contains(T))
                        {

                            foreach (Переход переход2 in операция2.Переходы)
                            {

                                string ТекстПерехода = переход2.Параметр["Текст перехода"];

                                if (ТекстПерехода.Contains(G) || ТекстПерехода.Contains(L))
                                {
                                    Изделия.Add(Изделие.Guid);

                                    Объекты ВсеДочерние = Изделие.ВсеДочерниеОбъекты;

                                    foreach (var Дочерний in ВсеДочерние)
                                    {
                                        Изделия.Add(Дочерний.Guid);

                                    }


                                }

                            }

                        }
                    }
                }
            }
        }
        return Изделия;
    }

    public List<Guid> Фильтр_Герметичность_Документы()
    {
        string K = "Контрольная";
        string P = "Проверочная";
        string T = "Технологическая приработка";
        string G = "Герметичност";
        string L = "герметичност";


        List<Guid> Изделия = new List<Guid>();
        Объекты ПоискИзделий = НайтиОбъекты("Электронная структура изделий", "[Тип] = 'Изделие'");
        Объекты СБ = НайтиОбъекты("Электронная структура изделий", "[Тип] = 'Сборочная единица'");
        Объекты Детали = НайтиОбъекты("Электронная структура изделий", "[Тип] = 'Деталь'");

        List<Объект> Лист1 = new List<Объект>(ПоискИзделий);
        List<Объект> Лист2 = new List<Объект>(СБ);
        List<Объект> Лист3 = new List<Объект>(Детали);
        Лист1.AddRange(Лист2);
        Лист1.AddRange(Лист3);

        Объекты ВсеЭси = Лист1;

        foreach (Объект Изделие in ВсеЭси)
        {
            Объекты техпроцессы = Изделие.СвязанныеОбъекты["Техпроцессы"];



            foreach (Объект техпроцесс in техпроцессы)
            {
                ТехнологическийПроцесс техпроцесс2 = (ТехнологическийПроцесс)техпроцесс;

                Объекты операции = техпроцесс.ДочерниеОбъекты;
                foreach (Объект операция in операции)
                {
                    Операция операция2 = (Операция)операция;
                    if (операция2 != null)
                    {
                        string НаименОпер = операция2.Параметр["Наименование"];

                        if (НаименОпер.Contains(K) || НаименОпер.Contains(P) || НаименОпер.Contains(T))
                        {

                            foreach (Переход переход2 in операция2.Переходы)
                            {

                                string ТекстПерехода = переход2.Параметр["Текст перехода"];

                                if (ТекстПерехода.Contains(G) || ТекстПерехода.Contains(L))
                                {
                                    string Обознач = Изделие.Параметр["Обозначение"];
                                    Объект Документ = НайтиОбъект("Документы", "Обозначение", Обознач);
                                    Изделия.Add(Документ.Guid);


                                }

                            }

                        }
                    }
                }
            }
        }
        return Изделия;
    }

    public string Герметичность_Документы()
    {
        string K = "Контрольная";
        string P = "Проверочная";
        string T = "Технологическая приработка";
        string Result = "";
        string G = "Герметичност";
        string L = "герметичност";
        string Обознач = ТекущийОбъект.Параметр["Обозначение"];
        Объект ЭСИ = НайтиОбъект("Электронная структура изделий", "Обозначение", Обознач);
        Объекты техпроцессы = ЭСИ.СвязанныеОбъекты["Техпроцессы"];
        foreach (Объект техпроцесс in техпроцессы)
        {
            ТехнологическийПроцесс техпроцесс2 = (ТехнологическийПроцесс)техпроцесс;

            Объекты операции = техпроцесс.ДочерниеОбъекты;
            foreach (Объект операция in операции)
            {
                Операция операция2 = (Операция)операция;

                string НаименОпер = операция2.Параметр["Наименование"];

                if (НаименОпер.Contains(K) || НаименОпер.Contains(P) || НаименОпер.Contains(T))
                {

                    foreach (Переход переход2 in операция2.Переходы)
                    {

                        string ТекстПерехода = переход2.Параметр["Текст перехода"];

                        if (ТекстПерехода.Contains(G) || ТекстПерехода.Contains(L))
                        {
                            Result += "+" + операция2.Параметр["Наименование"] + "+" + переход2.Параметр["Текст перехода"];
                        }

                    }

                }
            }
        }
        return Result;
    }
}